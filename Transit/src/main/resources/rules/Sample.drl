package com.sample
 
import com.sample.Transit;
 
rule "Rule01"
    when
        t : Transit (solution.contains("Walking")==false && distance<2.5)
    then
    	System.out.println("Adding Walking as a a solution");
		t.getSolution().add("Walking");
        update(t);
end

rule "Rule02"
    when
        t : Transit (solution.contains("Regular Scooter")==false && distance<2.5 && terain=="Flat")
    then
    	System.out.println("Adding Regular Scooter as a a solution");
    	t.getSolution().add("Regular Scooter");
        update(t);
end

rule "Rule03"
    when
        t : Transit (solution.contains("Regular Scooter")==false && 
        solution.contains("Bike")==false && distance>=2.5 && distance<5 && terain=="Flat")
    then
    	System.out.println("Adding Regular Scooter and Bike as a a solution");
    	t.getSolution().add("Regular Scooter");
    	t.getSolution().add("Bike");
        update(t);
end

rule "Rule04"
    when
        t : Transit (solution.contains("Bike")==false && distance>=2.5 && distance<5 && terain=="Rocky" && wantsTraining==true)
    then
    	System.out.println("Adding Bike as a a solution");
    	t.getSolution().add("Bike");
        update(t);
end

rule "Rule05"
    when
        t : Transit (solution.contains("Electrical Scooter")==false && 
        distance>=2.5 && distance<5 && terain=="Rocky" && wantsTraining==false)
    then
    	System.out.println("Adding Electrical Scooter as a a solution");
    	t.getSolution().add("Electrical Scooter");
        update(t);
end

rule "Rule06"
    when
        t : Transit (solution.contains("Bike")==false && 
        distance>=5 && distance<8 && wantsTraining==true)
    then
    	System.out.println("Adding Bike as a a solution");
    	t.getSolution().add("Bike");
        update(t);
end

rule "Rule07"
    when
        t : Transit (solution.contains("Electrical Scooter")==false && 
        distance>=5 && distance<8 && wantsTraining==false && hasMoney==false)
    then
    	System.out.println("Adding Electrical Scooter as a a solution");
    	t.getSolution().add("Electrical Scooter");
        update(t);
end

rule "Rule08"
    when
        t : Transit (solution.contains("Electrical Bike")==false && 
        distance>=5 && distance<8 && wantsTraining==false && hasMoney==true)
    then
    	System.out.println("Adding Electrical Bike as a a solution");
    	t.getSolution().add("Electrical Bike");
        update(t);
end

rule "Rule09"
    when
        t : Transit (solution.contains("Electrical Scooter")==false && 
        distance>=8  &&  hasMoney==false)
    then
    	System.out.println("Adding Electrical Scooter as a a solution");
    	t.getSolution().add("Electrical Scooter");
        update(t);
end

rule "Rule10"
    when
        t : Transit (solution.contains("Electrical Bike")==false && 
        distance>=8  &&  hasMoney==true)
    then
    	System.out.println("Adding Electrical Bike as a a solution");
    	t.getSolution().add("Electrical Bike");
        update(t);
end












